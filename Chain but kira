local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Chain But Kira | Script",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "AH YOO, CHILL!!!",
   LoadingSubtitle = "By TRoll",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Corn Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "3V UPDATE!",
   Content = "maybe, this is last update",
   Duration = 6.5,
   Image = nil,
})

local MainTab = Window:CreateTab("INF Stamina", nil) -- Title, Image
local MainSection = MainTab:CreateSection("This is Test")

local MainButton = MainTab:CreateButton({
   Name = "INF Stamina",
   Callback = function()
    while true do
-- Generated with Sigma Spy Github: https://github.com/depthso/Sigma-Spy
-- Services
local Players = game:GetService("Players")

-- Remote
local RemoteEvent = Players.LocalPlayer.Character.RagdollSCript.RemoteEvent -- RemoteEvent 

-- This data was received from the server
firesignal(RemoteEvent.OnClientEvent, 
    "Stamina",
    100,
    100
)
wait(5)
end
   end,
})

local MainButton = MainTab:CreateButton({
   Name = "INF CBTStamina",
   Callback = function()
   while true do
game:GetService("Players").LocalPlayer.PlayerGui.MainGui.CBTStamina.Value = (100)
wait(0.5)
end
   end,
})

local MainButton = MainTab:CreateButton({
   Name = "INF XSAW Gas",
   Callback = function()
   local player = game:GetService("Players").LocalPlayer

-- Function to force Gas to 100
local function lockGas(tool)
    if not tool or not tool:FindFirstChild("Gas") then return end
    
    -- HACK: Override the Value property
    local gas = tool.Gas
    while true do
        gas.Value = 100
        task.wait(0.1) -- Small delay to prevent lag
    end
end

-- Check Backpack & Character
local function checkForTool()
    -- Check Backpack
    local backpack = player:FindFirstChildOfClass("Backpack")
    if backpack then
        local xsaw = backpack:FindFirstChild("XSAW")
        if xsaw then lockGas(xsaw) end
    end
    
    -- Check Character
    local character = player.Character
    if character then
        local xsaw = character:FindFirstChild("XSAW")
        if xsaw then lockGas(xsaw) end
    end
end

-- Run when tool is added
player.Backpack.ChildAdded:Connect(checkForTool)
player.CharacterAdded:Connect(function()
    checkForTool()
end)

-- Initial check
checkForTool()
   end,
})

local MainButton = MainTab:CreateButton({
   Name = "INF M1911 Ammo",
   Callback = function()
   local player = game:GetService("Players").LocalPlayer
local playerName = player.Name

-- Search for your model in workspace
local playerModel = workspace:FindFirstChild(playerName)
if playerModel then
    local weaponScript = playerModel:FindFirstChild("M1911")
    if weaponScript then
        local remoteEvent = weaponScript:FindFirstChild("Script"):FindFirstChild("RemoteEvent")
        if remoteEvent then
            remoteEvent:FireServer(table.unpack({
                [1] = "Shoot",
                [2] = 99999999,
            }))
            print("Successfully")
        else
            warn("RemoteEvent not found in M1911")
        end
    else
        warn("M1911 not found in your hand")
    end
else
    warn("Your player model not found in workspace")
end
   end,
})

local MainButton = MainTab:CreateButton({
   Name = "INF M1911TWO Ammo",
   Callback = function()
   local player = game:GetService("Players").LocalPlayer
local playerName = player.Name

-- Search for your model in workspace
local playerModel = workspace:FindFirstChild(playerName)
if playerModel then
    local weaponScript = playerModel:FindFirstChild("M1911TWO")
    if weaponScript then
        local remoteEvent = weaponScript:FindFirstChild("Script"):FindFirstChild("RemoteEvent")
        if remoteEvent then
            remoteEvent:FireServer(table.unpack({
                [1] = "Shoot",
                [2] = 99999999,
            }))
            print("Successfully")
        else
            warn("RemoteEvent not found in M1911TWO")
        end
    else
        warn("M1911TWO not found in your hand")
    end
else
    warn("Your player model not found in workspace")
end
   end,
})

local MainButton = MainTab:CreateButton({
   Name = "INF MakeshiftAK Ammo",
   Callback = function()
   local player = game:GetService("Players").LocalPlayer
local playerName = player.Name

-- Search for your model in workspace
local playerModel = workspace:FindFirstChild(playerName)
if playerModel then
    local weaponScript = playerModel:FindFirstChild("MakeshiftAK")
    if weaponScript then
        local remoteEvent = weaponScript:FindFirstChild("Script"):FindFirstChild("RemoteEvent")
        if remoteEvent then
            remoteEvent:FireServer(table.unpack({
                [1] = "Shoot",
                [2] = 99999999,
            }))
            print("Successfully")
        else
            warn("RemoteEvent not found in MakeshiftAK")
        end
    else
        warn("MakeshiftAK not found in your hand")
    end
else
    warn("Your player model not found in workspace")
end
   end,
})

local Main10Tab = Window:CreateTab("NO CD", nil) -- Title, Image
local Main10Section = Main10Tab:CreateSection("yep all is beta")

local Main10Button = Main10Tab:CreateButton({
   Name = "XSAW inf Chrage (beta)",
   Callback = function()
   local charge = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TextButton = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")

--Properties:
charge.Name = "charge"
charge.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui") -- Better to put in PlayerGui
charge.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = charge
Frame.BackgroundColor3 = Color3.fromRGB(85, 85, 85)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.113149844, 0, 0.089430891, 0)
Frame.Size = UDim2.new(0, 140, 0, 61)
Frame.Active = true
Frame.Draggable = true

UICorner.Parent = Frame

TextButton.Parent = Frame -- Changed parent to Frame
TextButton.BackgroundColor3 = Color3.fromRGB(131, 131, 131)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.1, 0, 0.1, 0) -- Adjusted position
TextButton.Size = UDim2.new(0, 107, 0, 51)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Charge (V)"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextSize = 41.000

-- Function to execute the charge
local function executeCharge()
    local player = game:GetService("Players").LocalPlayer
    local playerName = player.Name

    -- Search for your model in workspace
    local playerModel = workspace:FindFirstChild(playerName)
    if playerModel then
        local xSawScript = playerModel:FindFirstChild("XSAW")
        if xSawScript then
            local remoteEvent = xSawScript:FindFirstChild("Script"):FindFirstChild("RemoteEvent")
            if remoteEvent then
                remoteEvent:FireServer("Charge")
                print("Successfully charged")
            else
                warn("RemoteEvent not found in XSAW")
            end
        else
            warn("XSAW not found in your character")
        end
    else
        warn("Your character model not found in workspace")
    end
end

-- Connect button click
TextButton.MouseButton1Down:Connect(executeCharge)

-- Add key press functionality
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if input.KeyCode == Enum.KeyCode.V then
            executeCharge()
        end
    end
end)

UICorner_2.Parent = TextButton

local Remote = game:GetService("ReplicatedStorage").AddNotif
firesignal(Remote.OnClientEvent, "WARNING!!!!!")
wait(1)
local Remote = game:GetService("ReplicatedStorage").AddNotif
firesignal(Remote.OnClientEvent, "Dont No Try")
wait(1)
local Remote = game:GetService("ReplicatedStorage").AddNotif
firesignal(Remote.OnClientEvent, "You may be banned")
   end,
})

local Main10Button = Main10Tab:CreateButton({
   Name = "INF dodge (No 100% and LAG)",
   Callback = function()
   while true do
local player = game:GetService("Players").LocalPlayer
local playerName = player.Name

-- Search for your model in workspace
local playerModel = workspace:FindFirstChild(playerName)
if playerModel then
    local ragdollScript = playerModel:FindFirstChild("RagdollScript") -- Case sensitive!
    if ragdollScript then
        local remoteEvent = ragdollScript:FindFirstChild("RemoteEvent")
        if remoteEvent then
            remoteEvent:FireServer(table.unpack({
                [1] = "Dodge",
                [2] = 1,
            }))
            print("Successfully!")
        else
            warn("RemoteEvent not found in RagdollScript")
        end
    else
        warn("RagdollScript not found in your workspace model")
    end
else
    warn("Your player model not found in workspace")
end
wait(0)
end
   end,
})

local Main10button = Main10Tab:CreateButton({
   Name = "Auto XSAW Clash",
   Callback = function()
   -- Guaranteed Remote Event Blocker
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Create notification UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.Name = "RemoteBlockerUI"

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(0, 200, 0, 40)
StatusLabel.Position = UDim2.new(1, -220, 1, -50)
StatusLabel.BackgroundTransparency = 0.7
StatusLabel.BackgroundColor3 = Color3.new(0, 0.5, 0)
StatusLabel.Text = "Remote Blocker: ACTIVE"
StatusLabel.TextColor3 = Color3.new(1, 1, 1)
StatusLabel.Font = Enum.Font.SourceSansBold
StatusLabel.Parent = ScreenGui

-- Core blocking function using network interception
local function BlockSpecificRemotes()
    local function isTargetRemote(remote)
        return remote:IsDescendantOf(workspace) and 
               remote.Parent and 
               remote.Parent.Name == "Kira" and 
               remote.Name == "RemoteEvent"
    end

    -- Block outgoing "Fail" events
    local oldFireServer
    oldFireServer = hookfunction(Instance.new("RemoteEvent").FireServer, function(self, ...)
        if isTargetRemote(self) and ... == "Fail" then
            print("[Blocked] Fail event")
            return nil
        end
        return oldFireServer(self, ...)
    end)

    -- Block incoming "XSAWClash" events
    local oldInvokeServer
    oldInvokeServer = hookfunction(Instance.new("RemoteEvent").InvokeServer, function(self, ...)
        if isTargetRemote(self) and ... == "XSAWClash" then
            print("[Blocked] XSAWClash event")
            return nil
        end
        return oldInvokeServer(self, ...)
    end)

    print("Network hooks installed successfully!")
end

-- Safe execution wrapper
local success, err = pcall(BlockSpecificRemotes)
if not success then
    StatusLabel.Text = "Remote Blocker: ERROR"
    StatusLabel.BackgroundColor3 = Color3.new(0.8, 0, 0)
    warn("Blocking failed: " .. err)
    
    -- Fallback method: Destroy the remote if it exists
    spawn(function()
        while true do
            local kira = workspace:FindFirstChild("Kira")
            if kira then
                local remote = kira:FindFirstChild("RemoteEvent")
                if remote then
                    remote:Destroy()
                    print("Fallback: RemoteEvent destroyed")
                end
            end
            wait(1)
        end
    end)
end

-- Continuous monitoring system
spawn(function()
    while wait(5) do
        local kira = workspace:FindFirstChild("Kira")
        if kira then
            local remote = kira:FindFirstChild("RemoteEvent")
            if remote then
                StatusLabel.Text = "Remote : ACTIVE"
                StatusLabel.BackgroundColor3 = Color3.new(0, 0.5, 0)
            else
                StatusLabel.Text = "Auto Clash : Work"
                StatusLabel.BackgroundColor3 = Color3.new(0.8, 0.8, 0)
            end
        else
            StatusLabel.Text = "Auto Clash : No Work"
            StatusLabel.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
        end
    end
end)

print("Remote blocker initialized successfully!")
   end,
})

local Main10Button = Main10Tab:CreateButton({
   Name = "MacheteTwo God Block (open auto clash)",
   Callback = function()
   while true do 
   local player = game:GetService("Players").LocalPlayer
local playerName = player.Name

-- Search for your model in workspace
local playerModel = workspace:FindFirstChild(playerName)
if playerModel then
    local weapon = playerModel:FindFirstChild("MacheteTWO")
    if weapon then
        local weaponScript = weapon:FindFirstChild("Script")
        if weaponScript then
            local remoteEvent = weaponScript:FindFirstChild("RemoteEvent")
            if remoteEvent then
                remoteEvent:FireServer("Block")
                print("Successfully")
            else
                warn("RemoteEvent not found in MacheteTWO Script")
            end
        else
            warn("Script not found in MacheteTWO")
        end
    else
        warn("MacheteTWO not found in your workspace model")
    end
else
    warn("Your player model not found in workspace")
end
   wait(0)
   end
   end,
})

local Main1Tab = Window:CreateTab("Unlock Blueprint", nil) -- Title, Image
local Main1Section = Main1Tab:CreateSection("Work 100%")

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock All",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.CombatKnifeTWO.Value = true
   game:GetService("Players").LocalPlayer.Blueprints.Angelica.Value = true
   game:GetService("Players").LocalPlayer.Blueprints.M1911.Value = true
   game:GetService("Players").LocalPlayer.Blueprints.M1911TWO.Value = true
   game:GetService("Players").LocalPlayer.Blueprints.Reficul.Value = true
   game:GetService("Players").LocalPlayer.Blueprints.XSAW.Value = true
   game:GetService("Players").LocalPlayer.Blueprints.MakeshiftAK.Value = true
   game:GetService("Players").LocalPlayer.Blueprints.MacheteTWO.Value = true
   end,
})

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock CombatKnifeTWO",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.CombatKnifeTWO.Value = true
   end,
})

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock Angelica",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.Angelica.Value = true
   end,
})

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock M1911",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.M1911.Value = true
   end,
})

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock M1911TWO",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.M1911TWO.Value = true
   end,
})

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock Reficul",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.Reficul.Value = true
   end,
})

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock XSAW",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.XSAW.Value = true
   end,
})

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock MakeshiftAk",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.MakeshiftAK.Value = true
   end,
})

local Main1Button = Main1Tab:CreateButton({
   Name = "Unlock Machete",
   Callback = function()
   game:GetService("Players").LocalPlayer.Blueprints.MacheteTWO.Value = true
   end,
})

local Main2Tab = Window:CreateTab("ESP", nil) -- Title, Image
local Main2Section = Main2Tab:CreateSection("Esp ltem or Npc")

local Main2Button = Main2Tab:CreateButton({
   Name = "Esp Scraps (no full)",
   Callback = function()
   local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")

local player = Players.LocalPlayer
local scrapsFolder = workspace.Map.Interactable.Scraps
local textColor = Color3.fromRGB(0, 255, 0)  -- Green color

-- Table to track active ESP components
local activeESP = {}
local activeScraps = {}

-- Function to create ESP for a scrap
local function createScrapESP(scrap)
    -- Skip if already has ESP
    if activeESP[scrap] then return end
    
    -- Create ESP components
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ScrapESP"
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 100, 0, 20)  -- Very compact
    billboard.StudsOffset = Vector3.new(0, 1.8, 0)
    billboard.Adornee = scrap
    billboard.Parent = scrap
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "ESPLabel"
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = textColor
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    textLabel.TextStrokeTransparency = 0.7
    textLabel.TextSize = 11  -- Small text
    textLabel.Font = Enum.Font.SourceSans
    textLabel.Text = "Scrap"
    textLabel.TextYAlignment = Enum.TextYAlignment.Center
    textLabel.Parent = billboard
    
    -- Store in tracking tables
    activeESP[scrap] = billboard
    activeScraps[scrap] = true
    
    return billboard
end

-- Function to remove ESP for a scrap
local function removeScrapESP(scrap)
    if activeESP[scrap] then
        activeESP[scrap]:Destroy()
        activeESP[scrap] = nil
        activeScraps[scrap] = nil
    end
end

-- Main update function
local function update()
    -- Process existing scraps in the folder
    for _, scrap in ipairs(scrapsFolder:GetChildren()) do
        if scrap:IsA("BasePart") and not activeScraps[scrap] then
            createScrapESP(scrap)
        end
    end
    
    -- Check for scraps that need removal
    for scrap in pairs(activeScraps) do
        if not scrap:IsDescendantOf(workspace) or not scrap:IsDescendantOf(scrapsFolder) then
            removeScrapESP(scrap)
        end
    end
    
    -- Update distances for visible scraps
    local character = player.Character
    local rootPart = character and character:FindFirstChild("HumanoidRootPart")
    
    if rootPart then
        for scrap in pairs(activeScraps) do
            if activeESP[scrap] and activeESP[scrap].Parent then
                local distance = math.floor((rootPart.Position - scrap.Position).Magnitude)
                activeESP[scrap].ESPLabel.Text = string.format("Scrap (%d)", distance)
            end
        end
    end
end

-- Set up heartbeat loop
RunService.Heartbeat:Connect(update)

-- Initial scan
update()

-- Cleanup when player leaves
player.CharacterRemoving:Connect(function()
    for scrap in pairs(activeScraps) do
        removeScrapESP(scrap)
    end
end)

-- Handle folder changes
scrapsFolder.ChildAdded:Connect(function(child)
    if child:IsA("BasePart") and not activeScraps[child] then
        createScrapESP(child)
    end
end)

scrapsFolder.ChildRemoved:Connect(function(child)
    if activeScraps[child] then
        removeScrapESP(child)
    end
end)
   end,
})

local Main2Button = Main2Tab:CreateButton({
   Name = "ESP Kira",
   Callback = function()
   local partToHighlight = workspace.Kira

local highlight = Instance.new("Highlight")
highlight.Parent = partToHighlight
highlight.FillColor = Color3.fromRGB(255, 21, 21)
highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
highlight.FillTransparency = 0.60
highlight.OutlineTransparency = 0
   end,
})

local Main4Tab = Window:CreateTab("Teleport", nil) -- Title, Image
local Main4Section = Main4Tab:CreateSection("Part")

local Main4Button = Main4Tab:CreateButton({
   Name = "Workshop",
   Callback = function()
     local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-257.286133, 62.0749893, 669.891846, 0.813478172, -1.28048372e-08, 0.58159548, 1.99865546e-08, 1, -5.93847416e-09, -0.58159548, 1.64549103e-08, 0.813478172)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
   end,
})

local Main4Button = Main4Tab:CreateButton({
   Name = "PowerPoint",
   Callback = function()
     local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(445.675964, 18.25, 564.147949, -0.801124573, -3.98102458e-08, -0.598497629, 4.30014424e-09, 1, -7.22729609e-08, 0.598497629, -6.04732691e-08, -0.801124573)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
   end,
})

local Main4Button = Main4Tab:CreateButton({
   Name = "Warehouse",
   Callback = function()
     local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(436.069641, 22.1289825, 182.937592, 0.959346414, 5.52487556e-10, -0.282231182, -4.41049242e-09, 1, -1.30343585e-08, 0.282231182, 1.37492444e-08, 0.959346414)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
   end,
})

local Main5Tab = Window:CreateTab("Auto Farm", nil) -- Title, Image
local Main5Section = Main5Tab:CreateSection("Script")

local Main5Button = Main5Tab:CreateButton({
   Name = "Automatic Scraps (beta) ",
   Callback = function()
     local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local player = Players.LocalPlayer
local folder = workspace.Map.Interactable:FindFirstChild("Scraps")

if not folder then
    warn("Scraps folder not found!")
    return
end

local active = false
local debounce = false

-- Auto-collect function
local function collectScrap(scrap)
    firetouchinterest(player.Character.HumanoidRootPart, scrap, 0) -- Begin touch
    firetouchinterest(player.Character.HumanoidRootPart, scrap, 1) -- End touch
    print("Collected scrap:", scrap.Name)
end

-- Toggle with F5
UIS.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.F5 and not gameProcessed then
        active = not active
        print("Script", active and "STARTED" or "STOPPED")
    end
end)

while task.wait(1) do
    if active and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        -- Get valid scraps
        local scraps = {}
        for _, item in ipairs(folder:GetChildren()) do
            if item:IsA("BasePart") then
                table.insert(scraps, item)
            end
        end
        
        if #scraps > 0 and not debounce then
            debounce = true
            
            -- Select random scrap
            local randomScrap = scraps[math.random(#scraps)]
            
            -- Teleport to scrap
            player.Character.HumanoidRootPart.CFrame = randomScrap.CFrame * CFrame.new(0, 3, 0)
            
            -- Auto-collect
            task.wait(0.5) -- Wait for teleport to complete
            collectScrap(randomScrap)
            
            debounce = false
        end
    end
end

local Remote = game:GetService("ReplicatedStorage").AddNotif
firesignal(Remote.OnClientEvent, "Click F5 For Start")
   end,
})

local Main5Button = Main5Tab:CreateButton({
   Name = "Keyboard",
   Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Xxtan31/Ata/main/deltakeyboardcrack.txt", true))()
   end,
})

local Main5Button = Main5Tab:CreateButton({
   Name = "Auto Frame (By Qorz Scripting)",
   Callback = function()
    --// Universal V1 GUI Script
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

--// Create the GUI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "UniversalV1"

-- Animated RGB Function
local function rgb()
    local counter = 0
    return function()
        counter = counter + 1
        return Color3.fromHSV((counter % 360) / 360, 1, 1)
    end
end

local getColor = rgb()

-- Main Frame
local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 300, 0, 250)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 2
MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true

-- Top Label
local TitleLabel = Instance.new("TextLabel", MainFrame)
TitleLabel.Size = UDim2.new(1, 0, 0, 30)
TitleLabel.Position = UDim2.new(0, 0, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Universal V1"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.TextSize = 20

-- Open/Close Button
local OpenCloseButton = Instance.new("TextButton", ScreenGui)
OpenCloseButton.Size = UDim2.new(0, 100, 0, 30)
OpenCloseButton.Position = UDim2.new(0.5, -50, 0.9, 0)
OpenCloseButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
OpenCloseButton.Text = "Close"
OpenCloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenCloseButton.Font = Enum.Font.SourceSansBold
OpenCloseButton.TextSize = 14

-- Loop Fullbright Button
local FullbrightButton = Instance.new("TextButton", MainFrame)
FullbrightButton.Size = UDim2.new(0.8, 0, 0.2, 0)
FullbrightButton.Position = UDim2.new(0.1, 0, 0.2, 0)
FullbrightButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
FullbrightButton.Text = "Loop Fullbright"
FullbrightButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FullbrightButton.Font = Enum.Font.SourceSansBold
FullbrightButton.TextSize = 14

-- Auto Farm Button
local AutoFarmButton = Instance.new("TextButton", MainFrame)
AutoFarmButton.Size = UDim2.new(0.8, 0, 0.2, 0)
AutoFarmButton.Position = UDim2.new(0.1, 0, 0.45, 0)
AutoFarmButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
AutoFarmButton.Text = "Auto Farm"
AutoFarmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoFarmButton.Font = Enum.Font.SourceSansBold
AutoFarmButton.TextSize = 14

-- Infinite Jump Button
local InfiniteJumpButton = Instance.new("TextButton", MainFrame)
InfiniteJumpButton.Size = UDim2.new(0.8, 0, 0.2, 0)
InfiniteJumpButton.Position = UDim2.new(0.1, 0, 0.7, 0)
InfiniteJumpButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
InfiniteJumpButton.Text = "Infinite Jump"
InfiniteJumpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
InfiniteJumpButton.Font = Enum.Font.SourceSansBold
InfiniteJumpButton.TextSize = 14

-- Functions
-- Loop Fullbright
local isFullbright = false
FullbrightButton.MouseButton1Click:Connect(function()
    isFullbright = not isFullbright
    FullbrightButton.Text = isFullbright and "Disable Fullbright" or "Loop Fullbright"

    if isFullbright then
        RunService:BindToRenderStep("Fullbright", Enum.RenderPriority.Last.Value, function()
            game.Lighting.Ambient = Color3.new(1, 1, 1)
            game.Lighting.Brightness = 2
        end)
    else
        RunService:UnbindFromRenderStep("Fullbright")
        game.Lighting.Ambient = Color3.new(0.5, 0.5, 0.5)
        game.Lighting.Brightness = 1
    end
end)

-- Auto Farm
local isAutoFarming = false
local previousPosition = nil
AutoFarmButton.MouseButton1Click:Connect(function()
    isAutoFarming = not isAutoFarming
    AutoFarmButton.Text = isAutoFarming and "Disable Auto Farm" or "Auto Farm"

    if isAutoFarming then
        -- Save the player's current position
        local character = LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            previousPosition = character.HumanoidRootPart.Position
            -- Continuously keep the player 50 studs in the sky
            RunService:BindToRenderStep("AutoFarm", Enum.RenderPriority.Character.Value, function()
                if character and character:FindFirstChild("HumanoidRootPart") then
                    character.HumanoidRootPart.Velocity = Vector3.zero -- Stop falling
                    character.HumanoidRootPart.CFrame = CFrame.new(previousPosition + Vector3.new(0, 50, 0))
                end
            end)
        end
    else
        -- Stop Auto Farming and teleport the player back to their original position
        RunService:UnbindFromRenderStep("AutoFarm")
        local character = LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") and previousPosition then
            character.HumanoidRootPart.CFrame = CFrame.new(previousPosition)
        end
        previousPosition = nil
    end
end)

-- Infinite Jump
local isInfiniteJump = false
InfiniteJumpButton.MouseButton1Click:Connect(function()
    isInfiniteJump = not isInfiniteJump
    InfiniteJumpButton.Text = isInfiniteJump and "Disable Infinite Jump" or "Infinite Jump"

    if isInfiniteJump then
        UserInputService.JumpRequest:Connect(function()
            LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
        end)
    end
end)

-- Open/Close GUI
local isOpen = true
OpenCloseButton.MouseButton1Click:Connect(function()
    isOpen = not isOpen
    MainFrame.Visible = isOpen
    OpenCloseButton.Text = isOpen and "Close" or "Open"
end)

-- RGB Animation
RunService.RenderStepped:Connect(function()
    MainFrame.BorderColor3 = getColor()
    FullbrightButton.BackgroundColor3 = getColor()
    AutoFarmButton.BackgroundColor3 = getColor()
    InfiniteJumpButton.BackgroundColor3 = getColor()
    OpenCloseButton.BackgroundColor3 = getColor()
end)
   end,
})

local Main3Tab = Window:CreateTab("More", nil) -- Title, Image
local Main3Section = Main3Tab:CreateSection("Script")

local Main3Button = Main3Tab:CreateButton({
   Name = "infinite yield",
   Callback = function()
     loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})
